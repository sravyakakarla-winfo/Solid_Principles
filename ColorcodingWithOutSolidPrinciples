using System;
using System.Drawing;

class colorcoding { 
static Dictionary<int,string> colors=new Dictionary<int, string>()
{
    { 0,"black"},
    { 1,"brown"},
    { 2,"red"},
    { 3,"orange"},
    { 4,"yellow"},
    { 5,"green"},
    { 6,"blue"},
    { 7,"voilet"},
    { 8,"grey"},
    { 9,"white"}
};

static Dictionary<int, string> multipliercolors = new Dictionary<int, string>()
{
    {-1,"gold" },
    {-2,"silver" },
    { 0,"black"},
    { 1,"brown"},
    { 2,"red"},
    { 3,"orange"},
    { 4,"yellow"},
    { 5,"green"},
    { 6,"blue"},
    { 7,"voilet"},
    { 8,"grey"},
    { 9,"white"}
};
static void Main(String[] args)
{
    string input = Console.ReadLine();
    double resistancevalue;
    bool isvalid = double.TryParse(input, out resistancevalue);
    if (isvalid)
    {
        Console.WriteLine(colorcode(resistancevalue));

    }
    else
    {
        Console.WriteLine("please enter valid number");
    }
}

static string colorcode(double resistancevalue)
    {
    int multiplier = 0;
    double newresistancevalue=resistancevalue;
        
        while (newresistancevalue <10 && newresistancevalue!=0.0){
            newresistancevalue *= 10;
        multiplier--;


        }
    while (newresistancevalue>=100){
        newresistancevalue/= 10;
        multiplier++;
    }

        int firstdigit = (int)newresistancevalue / 10;
        int seconddigit = (int)newresistancevalue % 10;

        string firstColor = "", secondColor = "", multiplierColor = "";

        if (colors.ContainsKey(firstdigit))
        {
            firstColor = colors[firstdigit];
        }
        else
        {
            firstColor = "Invalid";
        }

        if (colors.ContainsKey(seconddigit))
        {
            secondColor = colors[seconddigit];
        }
        else
        {
            secondColor = "Invalid";
        }

        if (multipliercolors.ContainsKey(multiplier))
        {
            multiplierColor = multipliercolors[multiplier];
        }
        else
        {
            multiplierColor = "Invalid";
        }

        return $"{firstColor}, {secondColor}, {multiplierColor}";
    


       


    }
}




